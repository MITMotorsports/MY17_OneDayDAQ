#############################################################
#                  CAN Node SPEC                            #
#           May need to listen to can_ids: None             #
#############################################################

FRONT_CAN_NODE_DRIVER_OUTPUT:
  can_id: 0x030
  frequency: 50HZ
  is_big_endian: true
  segments:
    REQUESTED_TORQUE:
      position: [0, 15]
      c_type: int16_t
      values:
        POSITIVE_TORQUE: [0x0000, 0x7FFF]
        NEGATIVE_TORQUE: [0x8000, 0xFFFF]
    BRAKE_PRESSURE:
      position: [16, 23]
      c_type: uint8_t
      values:
        BRAKE_PRESSURE: [0x00, 0xFF]
    STEERING_POSITION:
      position: [24, 31]
      c_type: uint8_t
      values:
        STEERING_TRAVEL_LEFTWARDS: [0x00, 0xFF]
    THROTTLE_IMPLAUSIBLE:
      position: [32, 32]
      c_type: bool
      values:
        PLAUSIBLE: 0x0
        IMPLAUSIBLE: 0x1
    BRAKE_THROTTLE_CONFLICT:
      position: [33, 33]
      c_type: bool
      values:
        NO_CONFLICT: 0x0
        CONFLICT: 0x1
    BRAKE_ENGAGED:
      position: [34, 34]
      c_type: bool
      values:
        RELEASED: 0x0
        ENGAGED: 0x1
    RESERVED:
      position: [35, 39]
      c_type: null
      values:
    TORQUE_BEFORE_CONTROL:
      position: [40, 55]
      c_type: int16_t
      values:

REAR_CAN_NODE_HEARTBEAT:
  can_id: 0x031
  frequency: 1HZ
  is_big_endian: true
  segments:
    IS_OK:
      position: [0, 0]
      c_type: bool
      values:
        NOT_OK: 0x0
        OK: 0x1

REAR_CAN_NODE_WHEEL_SPEED:
  can_id: 0x032
  frequency: 50HZ
  is_big_endian: true
  segments:
    REAR_RIGHT_WHEEL_SPEED:
      position: [0, 31]
      c_type: uint32_t
      values:
        REAR_RIGHT_WHEEL_SPEED: [0x000, 0xFFFFFFFF]
    REAR_LEFT_WHEEL_SPEED:
      position: [32, 63]
      c_type: uint32_t
      values:
        REAR_LEFT_WHEEL_SPEED: [0x000, 0xFFFFFFFF]
